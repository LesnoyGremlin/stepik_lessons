1. Тест, сформированный с помощью Selenium IDE оформлен через класс, но, предполагаю, мы так сделаем дальше тоже.

2. Возможно, если изучить подробно возможности Selenium IDE, следующие минусы получится убрать, но на данный момент при необходимости поддерживать код теста:
- передаваемые данные не вынесены в константы, то есть если захочется, например, изменить пароль, придется его поменять в трех местах. Легко допустить ошибку.
- аналогичная проблема с локаторами
- так как локаторы и переменные не заданы понятными именами, то тяжело понять логику программы
- нет понятного сообщения о падении теста
- есть предположение, что при изменении сайта, например, добавлении еще кнопки, часть локаторов может стать неправильной. Так и при выборе локатора программистом может случиться, но, мне кажется, при грамотном выборе локаторов вероятность ниже.
- если сравнить выбор локаторов для регистрации нового пользователя, то вполне можно подобрать локаторы, не зависящие от языка сайта. В сгенерированном файле есть локатор с текстом кнопки на русском, например.

3. Ввод данных в поле ввода (адрес или пароль).
Я нахожу поле, очищаю его, ввожу желаемые данные.
Сгенерированный файл кликает на поле и вводит данные. Если в поле уже будут данные (разработчик сайта добавил значения по дефолту, например), то новые данные добавятся в поле ввода, а значит будут неверными.

4. В курсе и своих программах поиск по элементу присваивали переменной и уже с ней что-то делали (слали данные, кликали).
В сгенерированном файле для любого действия с элементом его ищут. Затрудняюсь сказать, что правильнее. Как мы пишем - легче читается.
